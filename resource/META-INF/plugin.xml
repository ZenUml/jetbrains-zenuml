<idea-plugin>
  <id>com.zenuml.jetbrains</id>
  <name>ZenUML Support</name>
  <!-- Plugin version
   Recommended format is BRANCH.BUILD.FIX (MAJOR.MINOR.FIX)
   We use YEAR.MONTH.DAY format (see gradle.properties)
   Displayed in the "Plugins" settings dialog and the plugin repository Web interface.  -->
  <version>(filled automatically by the build plugin)</version>
  <idea-version since-build="212.5457.46"/>
  <vendor url="https://www.zenuml.com">ZenUML</vendor>

  <depends optional="true" config-file="zenuml-withJava.xml">com.intellij.modules.java</depends>
  <!-- Description of the plugin.
   Should be short and to the point.
   Start the description with a verb in a present simple form such as
   "integrates", "synchronizes", "adds support for" or "lets you view".
   Don't use marketing adjectives like "simple", "lightweight", or "professional".
   Don't repeat the name of the plugin.
   For plugins that add language/platform/framework support, the description MUST specify
   the version of the corresponding language/platform/framework.
   Don't mention the IDE compatibility. E.g., don't say "Adds support to IntelliJ IDEA for..."
   Displayed in the "Plugins" settings dialog and the plugin repository Web interface.
   Simple HTML elements can be included between <![CDATA[  ]]> tags.  -->
  <description>(filled automatically by the build plugin: patchPluginXml.pluginDescription)</description>

  <change-notes>(filled automatically by the build plugin with data from README.md)  </change-notes>

  <project-components>
    <component>
      <implementation-class>org.intellij.sequencer.SequencePlugin2</implementation-class>
      <interface-class>org.intellij.sequencer.SequencePlugin2</interface-class>
    </component>
  </project-components>

  <extensionPoints>
    <extensionPoint qualifiedName="org.intellij.zenuml.html.panel.provider"
                    interface="org.intellij.plugins.markdown.ui.preview.MarkdownHtmlPanelProvider"/>
    <extensionPoint qualifiedName="org.intellij.zenuml.fenceLanguageProvider"
                    interface="org.intellij.plugins.markdown.injection.CodeFenceLanguageProvider"/>
    <extensionPoint qualifiedName="org.intellij.zenuml.codeFencePluginGeneratingProvider"
                    interface="org.intellij.plugins.markdown.extensions.MarkdownCodeFencePluginGeneratingProvider"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <fileType name="ZenUML" extensions="z;zen;zenuml" language="ZenUML"
              implementationClass="org.intellij.plugins.markdown.lang.ZenUmlFileType" fieldName="INSTANCE"/>
    <!--    <lang.parserDefinition language="ZenUML" implementationClass="org.intellij.plugins.markdown.lang.parser.MarkdownParserDefinition"/>-->
    <!--    <lang.ast.factory language="ZenUML" implementationClass="org.intellij.plugins.markdown.lang.psi.MarkdownASTFactory"/>-->

    <!--    <lang.elementManipulator forClass="org.intellij.plugins.markdown.lang.psi.impl.ZenUmlCodeFenceImpl"-->
    <!--                             implementationClass="org.intellij.plugins.markdown.lang.psi.impl.ZenUmlCodeFenceImpl$Manipulator"/>-->
    <!--    <lang.elementManipulator forClass="org.intellij.plugins.markdown.lang.psi.impl.ZenUmlLinkDestinationImpl"-->
    <!--                             implementationClass="org.intellij.plugins.markdown.lang.psi.impl.ZenUmlLinkDestinationImpl$Manipulator"/>-->

    <!--<colorSettingsPage implementation="org.intellij.plugins.markdown.highlighting.MarkdownColorSettingsPage"/>-->
    <!--<syntaxHighlighter key="ZenUML" implementationClass="org.intellij.plugins.markdown.highlighting.MarkdownSyntaxHighlighter"/>-->
    <additionalTextAttributes scheme="Default" file="colorSchemes/MarkdownDefault.xml"/>
    <additionalTextAttributes scheme="Darcula" file="colorSchemes/MarkdownDarcula.xml"/>

    <!--    <braceMatcher filetype="ZenUML" implementationClass="org.intellij.plugins.markdown.braces.MarkdownBraceMatcher"/>-->
    <!--    <quoteHandler fileType="ZenUML" className="org.intellij.plugins.markdown.braces.MarkdownQuoteHandler"/>-->
    <!--    <typedHandler implementation="org.intellij.plugins.markdown.editor.MarkdownTypedHandler"/>-->

    <!--    <bidiRegionsSeparator language="ZenUML" implementationClass="org.intellij.plugins.markdown.editor.MarkdownBidiRegionsSeparator"/>-->

    <!--    <annotator language="ZenUML" implementationClass="org.intellij.plugins.markdown.highlighting.MarkdownHighlightingAnnotator"/>-->

    <!--    <multiHostInjector implementation="org.intellij.plugins.markdown.injection.CodeFenceInjector"/>-->

    <!--    <completion.contributor language="ZenUML"-->
    <!--                            implementationClass="org.intellij.plugins.markdown.injection.LanguageListCompletionContributor"/>-->

    <fileEditorProvider implementation="org.intellij.plugins.markdown.ui.preview.MarkdownSplitEditorProvider"/>

    <!--    <spellchecker.support language="ZenUML"-->
    <!--                          implementationClass="org.intellij.plugins.markdown.spellchecking.MarkdownSpellcheckingStrategy"/>-->

    <applicationConfigurable id="Settings.ZenUml"
                             bundle="org.intellij.plugins.markdown.bundle.MarkdownBundle"
                             groupId="language"
                             nonDefaultProject="true"
                             key="markdown.settings.name"
                             instance="org.intellij.plugins.markdown.settings.MarkdownSettingsConfigurable">
    </applicationConfigurable>
    <applicationService serviceImplementation="org.intellij.plugins.markdown.settings.ZenUmlApplicationSettings"/>
    <!--    <applicationService serviceImplementation="org.intellij.plugins.markdown.ui.preview.ZenUmlCodeFencePluginCache"/>-->
    <!--    <lang.psiStructureViewFactory language="ZenUML"-->
    <!--                                  implementationClass="org.intellij.plugins.markdown.structureView.MarkdownStructureViewFactory"/>-->
    <!--    <psi.referenceContributor implementation="org.intellij.plugins.markdown.lang.references.MarkdownReferenceProvider"/>-->
    <stripTrailingSpacesFilterFactory
       implementation="org.intellij.plugins.markdown.editor.MarkdownStripTrailingSpacesFilterFactory"/>
    <httpRequestHandler implementation="org.intellij.plugins.markdown.ui.preview.PreviewStaticServer2"/>

    <!--    <localInspection shortName="ZenUmlUnresolvedFileReference" bundle="org.intellij.plugins.markdown.bundle.MarkdownBundle"-->
    <!--                     key="zenuml.placeholder.inspection.name" groupKey="zenuml.inspection.group.ruby.name"-->
    <!--                     enabledByDefault="true" level="WARNING"-->
    <!--                     implementationClass="org.intellij.plugins.markdown.lang.references.ZenUmlUnresolvedFileReferenceInspection"/>-->

    <!--    <lang.foldingBuilder language="ZenUML" implementationClass="org.intellij.plugins.markdown.folding.MarkdownFoldingBuilder"/>-->
    <!--    <stubIndex implementation="org.intellij.plugins.markdown.lang.index.MarkdownHeadersIndex"/>-->
    <!--    <anchorReferenceProvider implementation="org.intellij.plugins.markdown.lang.references.MarkdownAnchorPathReferenceProvider"/>-->
    <!--    <todoIndexer filetype="ZenUML" implementationClass="org.intellij.plugins.markdown.highlighting.MarkdownTodoIndexer" />-->
    <!--    <indexPatternBuilder implementation="org.intellij.plugins.markdown.highlighting.MarkdownIndexPatternBuilder" />-->
    <langCodeStyleSettingsProvider
       implementation="org.intellij.plugins.markdown.lang.formatter.MarkdownLanguageCodeStyleSettingsProvider"/>
    <!--    <enterHandlerDelegate implementation="org.intellij.plugins.markdown.editor.MarkdownEnterHandler"/>-->

    <applicationService serviceImplementation="org.intellij.sequencer.config.Configuration2"/>
  </extensions>

  <extensions defaultExtensionNs="org.intellij.zenuml">
    <html.panel.provider implementation="org.intellij.plugins.markdown.ui.preview.javafx.JavaFxHtmlPanelProvider"/>
    <fenceLanguageProvider
       implementation="org.intellij.plugins.markdown.extensions.plantuml.PlantUMLCodeFenceLanguageProvider"/>
    <!--    <codeFencePluginGeneratingProvider implementation="org.intellij.plugins.markdown.extensions.plantuml.PlantUMLProvider"/>-->
  </extensions>

  <actions>
    <group id="ZenUml.Toolbar.Left" class="com.intellij.openapi.actionSystem.DefaultActionGroup"
           text="Markdown editor actions">

      <action class="com.zenuml.sequence.plugins.jetbrains.actions.DocumentationAction"
              id="com.zenuml.sequence.plugins.jetbrains.actions.DocumentationAction"
              text="Documentation"
              description="Open documentation"
              icon="MarkdownIcons.EditorActions.Help">
      </action>
    </group>


    <action class="org.intellij.plugins.markdown.ui.actions.editorLayout.ZenUmlCyclicSplitLayoutChangeAction"
            id="org.intellij.plugins.markdown.ui.actions.editorLayout.ZenUmlCyclicSplitLayoutChangeAction"
            text="Change split layout"
            description="Toggle markdown editor layout through different values (editor only, preview only, wysiwyg split)"
            icon="AllIcons.Actions.PreviewDetails"
            use-shortcut-of="ParameterInfo">
    </action>

    <group id="ZenUml.Toolbar.Right" class="com.intellij.openapi.actionSystem.DefaultActionGroup"
           text="Markdown editor layout actions">
      <action class="org.intellij.plugins.markdown.ui.actions.editorLayout.ZenUmlEditorOnlyLayoutChangeAction"
              id="org.intellij.plugins.markdown.ui.actions.editorLayout.ZenUmlEditorOnlyLayoutChangeAction"
              text="Show editor only"
              description="Sets markdown editor layout to show editor only"
              icon="AllIcons.General.LayoutEditorOnly">
      </action>
      <action class="org.intellij.plugins.markdown.ui.actions.editorLayout.ZenUmlEditorAndPreviewLayoutChangeAction"
              id="org.intellij.plugins.markdown.ui.actions.editorLayout.ZenUmlEditorAndPreviewLayoutChangeAction"
              text="Show editor and preview"
              description="Sets markdown editor layout to show editor and preview in split"
              icon="AllIcons.General.LayoutEditorPreview">
      </action>
      <action class="org.intellij.plugins.markdown.ui.actions.editorLayout.ZenUmlPreviewOnlyLayoutChangeAction"
              id="org.intellij.plugins.markdown.ui.actions.editorLayout.ZenUmlPreviewOnlyLayoutChangeAction"
              text="Show preview only"
              description="Sets markdown editor layout to show preview only"
              icon="AllIcons.General.LayoutPreviewOnly">
      </action>

      <action class="com.zenuml.sequence.plugins.jetbrains.actions.OpenInBrowserAction"
              id="com.zenuml.sequence.plugins.jetbrains.actions.OpenInBrowserAction"
              text="Open in browser"
              description="Open in browser"
              icon="AllIcons.General.Web">
      </action>
    </group>

  </actions>

  <product-descriptor code="PZENUML" release-date="20190601" release-version="20191" optional="true" />
</idea-plugin>
