plugins {
  id 'java'
  id 'idea'
  id 'org.jetbrains.intellij' version '1.1.4'
  id 'org.jetbrains.kotlin.jvm' version '1.4.21'
  id "com.github.node-gradle.node" version "3.2.1"
}
buildSearchableOptions.enabled = false
repositories {
  mavenCentral()
  flatDir { dirs 'lib' }
}

dependencies {
  // https://mvnrepository.com/artifact/com.googlecode.owasp-java-html-sanitizer/owasp-java-html-sanitizer
  compile group: 'com.googlecode.owasp-java-html-sanitizer', name: 'owasp-java-html-sanitizer'
//  compile "org.jetbrains:markdown:${markdownParserVersion}"
  compile 'org.jetbrains.kotlin:kotlin-reflect:1.5.31'
  compile 'org.jetbrains.kotlin:kotlin-stdlib:1.5.31'
  compile 'io.reactivex.rxjava2:rxjava:2.2.21'

  testCompile group: 'junit', name: 'junit', version: '4.12'
  testImplementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.31'
}

compileKotlin {
  kotlinOptions.jvmTarget = javaVersion
  kotlinOptions.apiVersion = "1.4"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = javaVersion
}

sourceSets {
  main {
    java {
      srcDirs 'src'
      srcDirs 'gen'
    }
    resources {
      srcDirs 'resource'
    }
  }
  test {
    java {
      srcDirs 'test/src'
    }
    resources {
      srcDirs 'test/data'
    }
  }
}

intellij {
  version = 'IC-2021.2.3'
  pluginName = 'zenuml'
  downloadSources = false
  updateSinceUntilBuild = false
  plugins = ['IntelliLang', 'java']
}


idea {
  project {
    jdkName = javaVersion
    languageLevel = javaVersion
    vcs = 'Git'
  }
  module {
    generatedSourceDirs += file('gen')
  }
}

node {
  nodeProjectDir = file("${project.projectDir}/jetbrains-viewer")
}
